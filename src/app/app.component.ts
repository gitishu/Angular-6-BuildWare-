import { Component } from '@angular/core';//imported from this module 

function log (target, name, descriptor){//defines the function 
	console.log(target, name , descriptor)
	//store the original function

	const original = descriptor.value; 

  original();
  // descriptor.value=function(){

  //   console.log("This message was hacked");
  // }  	


  ///doing by the second way

  descriptor.value = function(...args){//by passing all the arguments here we are overriding the function here  
    
    console.log("Arguments ",args,"were passed in this function");
    const result = original.apply(this,args);//passing the arguments inside the original function here 
    console.log("The result of this function is ",result);
  }






  return descriptor;//returning that function which is actually being called     

}





//here class decorator i defined here 



function log(className){
  console.log(className);
  return;
}















@Component({//decorator this is the main component 
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']//within  brackets also ok 
})
export class AppComponent {//export the class by the version of the angular  6 
  title = 'app';



  constructor(){
   console.log ("This statement was generated by the constructor",this.aSimpleMethod(5,2));
   console.log("generated by the console log ",this.aSimpleMethod(5,2));
  }




@log//my self member decorator 
  aSimpleMethod(a,b){
  	console.log("hey their");
    return a*a;//product returned 
  	//ki vo decorate karega kaise yeh cheez aayegi
  }
} 
    



